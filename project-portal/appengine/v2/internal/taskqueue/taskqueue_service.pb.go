// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v3.21.12
// source: internal/taskqueue/taskqueue_service.proto

package taskqueue

import (
	datastore "google.golang.org/appengine/v2/internal/datastore"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskQueueServiceError_ErrorCode int32

const (
	TaskQueueServiceError_OK                              TaskQueueServiceError_ErrorCode = 0
	TaskQueueServiceError_UNKNOWN_QUEUE                   TaskQueueServiceError_ErrorCode = 1
	TaskQueueServiceError_TRANSIENT_ERROR                 TaskQueueServiceError_ErrorCode = 2
	TaskQueueServiceError_INTERNAL_ERROR                  TaskQueueServiceError_ErrorCode = 3
	TaskQueueServiceError_TASK_TOO_LARGE                  TaskQueueServiceError_ErrorCode = 4
	TaskQueueServiceError_INVALID_TASK_NAME               TaskQueueServiceError_ErrorCode = 5
	TaskQueueServiceError_INVALID_QUEUE_NAME              TaskQueueServiceError_ErrorCode = 6
	TaskQueueServiceError_INVALID_URL                     TaskQueueServiceError_ErrorCode = 7
	TaskQueueServiceError_INVALID_QUEUE_RATE              TaskQueueServiceError_ErrorCode = 8
	TaskQueueServiceError_PERMISSION_DENIED               TaskQueueServiceError_ErrorCode = 9
	TaskQueueServiceError_TASK_ALREADY_EXISTS             TaskQueueServiceError_ErrorCode = 10
	TaskQueueServiceError_TOMBSTONED_TASK                 TaskQueueServiceError_ErrorCode = 11
	TaskQueueServiceError_INVALID_ETA                     TaskQueueServiceError_ErrorCode = 12
	TaskQueueServiceError_INVALID_REQUEST                 TaskQueueServiceError_ErrorCode = 13
	TaskQueueServiceError_UNKNOWN_TASK                    TaskQueueServiceError_ErrorCode = 14
	TaskQueueServiceError_TOMBSTONED_QUEUE                TaskQueueServiceError_ErrorCode = 15
	TaskQueueServiceError_DUPLICATE_TASK_NAME             TaskQueueServiceError_ErrorCode = 16
	TaskQueueServiceError_SKIPPED                         TaskQueueServiceError_ErrorCode = 17
	TaskQueueServiceError_TOO_MANY_TASKS                  TaskQueueServiceError_ErrorCode = 18
	TaskQueueServiceError_INVALID_PAYLOAD                 TaskQueueServiceError_ErrorCode = 19
	TaskQueueServiceError_INVALID_RETRY_PARAMETERS        TaskQueueServiceError_ErrorCode = 20
	TaskQueueServiceError_INVALID_QUEUE_MODE              TaskQueueServiceError_ErrorCode = 21
	TaskQueueServiceError_ACL_LOOKUP_ERROR                TaskQueueServiceError_ErrorCode = 22
	TaskQueueServiceError_TRANSACTIONAL_REQUEST_TOO_LARGE TaskQueueServiceError_ErrorCode = 23
	TaskQueueServiceError_INCORRECT_CREATOR_NAME          TaskQueueServiceError_ErrorCode = 24
	TaskQueueServiceError_TASK_LEASE_EXPIRED              TaskQueueServiceError_ErrorCode = 25
	TaskQueueServiceError_QUEUE_PAUSED                    TaskQueueServiceError_ErrorCode = 26
	TaskQueueServiceError_INVALID_TAG                     TaskQueueServiceError_ErrorCode = 27
	// Reserved range for the Datastore error codes.
	// Original Datastore error code is shifted by DATASTORE_ERROR offset.
	TaskQueueServiceError_DATASTORE_ERROR TaskQueueServiceError_ErrorCode = 10000
)

// Enum value maps for TaskQueueServiceError_ErrorCode.
var (
	TaskQueueServiceError_ErrorCode_name = map[int32]string{
		0:     "OK",
		1:     "UNKNOWN_QUEUE",
		2:     "TRANSIENT_ERROR",
		3:     "INTERNAL_ERROR",
		4:     "TASK_TOO_LARGE",
		5:     "INVALID_TASK_NAME",
		6:     "INVALID_QUEUE_NAME",
		7:     "INVALID_URL",
		8:     "INVALID_QUEUE_RATE",
		9:     "PERMISSION_DENIED",
		10:    "TASK_ALREADY_EXISTS",
		11:    "TOMBSTONED_TASK",
		12:    "INVALID_ETA",
		13:    "INVALID_REQUEST",
		14:    "UNKNOWN_TASK",
		15:    "TOMBSTONED_QUEUE",
		16:    "DUPLICATE_TASK_NAME",
		17:    "SKIPPED",
		18:    "TOO_MANY_TASKS",
		19:    "INVALID_PAYLOAD",
		20:    "INVALID_RETRY_PARAMETERS",
		21:    "INVALID_QUEUE_MODE",
		22:    "ACL_LOOKUP_ERROR",
		23:    "TRANSACTIONAL_REQUEST_TOO_LARGE",
		24:    "INCORRECT_CREATOR_NAME",
		25:    "TASK_LEASE_EXPIRED",
		26:    "QUEUE_PAUSED",
		27:    "INVALID_TAG",
		10000: "DATASTORE_ERROR",
	}
	TaskQueueServiceError_ErrorCode_value = map[string]int32{
		"OK":                              0,
		"UNKNOWN_QUEUE":                   1,
		"TRANSIENT_ERROR":                 2,
		"INTERNAL_ERROR":                  3,
		"TASK_TOO_LARGE":                  4,
		"INVALID_TASK_NAME":               5,
		"INVALID_QUEUE_NAME":              6,
		"INVALID_URL":                     7,
		"INVALID_QUEUE_RATE":              8,
		"PERMISSION_DENIED":               9,
		"TASK_ALREADY_EXISTS":             10,
		"TOMBSTONED_TASK":                 11,
		"INVALID_ETA":                     12,
		"INVALID_REQUEST":                 13,
		"UNKNOWN_TASK":                    14,
		"TOMBSTONED_QUEUE":                15,
		"DUPLICATE_TASK_NAME":             16,
		"SKIPPED":                         17,
		"TOO_MANY_TASKS":                  18,
		"INVALID_PAYLOAD":                 19,
		"INVALID_RETRY_PARAMETERS":        20,
		"INVALID_QUEUE_MODE":              21,
		"ACL_LOOKUP_ERROR":                22,
		"TRANSACTIONAL_REQUEST_TOO_LARGE": 23,
		"INCORRECT_CREATOR_NAME":          24,
		"TASK_LEASE_EXPIRED":              25,
		"QUEUE_PAUSED":                    26,
		"INVALID_TAG":                     27,
		"DATASTORE_ERROR":                 10000,
	}
)

func (x TaskQueueServiceError_ErrorCode) Enum() *TaskQueueServiceError_ErrorCode {
	p := new(TaskQueueServiceError_ErrorCode)
	*p = x
	return p
}

func (x TaskQueueServiceError_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskQueueServiceError_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_taskqueue_taskqueue_service_proto_enumTypes[0].Descriptor()
}

func (TaskQueueServiceError_ErrorCode) Type() protoreflect.EnumType {
	return &file_internal_taskqueue_taskqueue_service_proto_enumTypes[0]
}

func (x TaskQueueServiceError_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TaskQueueServiceError_ErrorCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TaskQueueServiceError_ErrorCode(num)
	return nil
}

// Deprecated: Use TaskQueueServiceError_ErrorCode.Descriptor instead.
func (TaskQueueServiceError_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{0, 0}
}

type TaskQueueMode_Mode int32

const (
	TaskQueueMode_PUSH TaskQueueMode_Mode = 0
	TaskQueueMode_PULL TaskQueueMode_Mode = 1
)

// Enum value maps for TaskQueueMode_Mode.
var (
	TaskQueueMode_Mode_name = map[int32]string{
		0: "PUSH",
		1: "PULL",
	}
	TaskQueueMode_Mode_value = map[string]int32{
		"PUSH": 0,
		"PULL": 1,
	}
)

func (x TaskQueueMode_Mode) Enum() *TaskQueueMode_Mode {
	p := new(TaskQueueMode_Mode)
	*p = x
	return p
}

func (x TaskQueueMode_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskQueueMode_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_taskqueue_taskqueue_service_proto_enumTypes[1].Descriptor()
}

func (TaskQueueMode_Mode) Type() protoreflect.EnumType {
	return &file_internal_taskqueue_taskqueue_service_proto_enumTypes[1]
}

func (x TaskQueueMode_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TaskQueueMode_Mode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TaskQueueMode_Mode(num)
	return nil
}

// Deprecated: Use TaskQueueMode_Mode.Descriptor instead.
func (TaskQueueMode_Mode) EnumDescriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{5, 0}
}

type TaskQueueAddRequest_RequestMethod int32

const (
	TaskQueueAddRequest_GET    TaskQueueAddRequest_RequestMethod = 1
	TaskQueueAddRequest_POST   TaskQueueAddRequest_RequestMethod = 2
	TaskQueueAddRequest_HEAD   TaskQueueAddRequest_RequestMethod = 3
	TaskQueueAddRequest_PUT    TaskQueueAddRequest_RequestMethod = 4
	TaskQueueAddRequest_DELETE TaskQueueAddRequest_RequestMethod = 5
)

// Enum value maps for TaskQueueAddRequest_RequestMethod.
var (
	TaskQueueAddRequest_RequestMethod_name = map[int32]string{
		1: "GET",
		2: "POST",
		3: "HEAD",
		4: "PUT",
		5: "DELETE",
	}
	TaskQueueAddRequest_RequestMethod_value = map[string]int32{
		"GET":    1,
		"POST":   2,
		"HEAD":   3,
		"PUT":    4,
		"DELETE": 5,
	}
)

func (x TaskQueueAddRequest_RequestMethod) Enum() *TaskQueueAddRequest_RequestMethod {
	p := new(TaskQueueAddRequest_RequestMethod)
	*p = x
	return p
}

func (x TaskQueueAddRequest_RequestMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskQueueAddRequest_RequestMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_taskqueue_taskqueue_service_proto_enumTypes[2].Descriptor()
}

func (TaskQueueAddRequest_RequestMethod) Type() protoreflect.EnumType {
	return &file_internal_taskqueue_taskqueue_service_proto_enumTypes[2]
}

func (x TaskQueueAddRequest_RequestMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TaskQueueAddRequest_RequestMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TaskQueueAddRequest_RequestMethod(num)
	return nil
}

// Deprecated: Use TaskQueueAddRequest_RequestMethod.Descriptor instead.
func (TaskQueueAddRequest_RequestMethod) EnumDescriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{6, 0}
}

type TaskQueueQueryTasksResponse_Task_RequestMethod int32

const (
	TaskQueueQueryTasksResponse_Task_GET    TaskQueueQueryTasksResponse_Task_RequestMethod = 1
	TaskQueueQueryTasksResponse_Task_POST   TaskQueueQueryTasksResponse_Task_RequestMethod = 2
	TaskQueueQueryTasksResponse_Task_HEAD   TaskQueueQueryTasksResponse_Task_RequestMethod = 3
	TaskQueueQueryTasksResponse_Task_PUT    TaskQueueQueryTasksResponse_Task_RequestMethod = 4
	TaskQueueQueryTasksResponse_Task_DELETE TaskQueueQueryTasksResponse_Task_RequestMethod = 5
)

// Enum value maps for TaskQueueQueryTasksResponse_Task_RequestMethod.
var (
	TaskQueueQueryTasksResponse_Task_RequestMethod_name = map[int32]string{
		1: "GET",
		2: "POST",
		3: "HEAD",
		4: "PUT",
		5: "DELETE",
	}
	TaskQueueQueryTasksResponse_Task_RequestMethod_value = map[string]int32{
		"GET":    1,
		"POST":   2,
		"HEAD":   3,
		"PUT":    4,
		"DELETE": 5,
	}
)

func (x TaskQueueQueryTasksResponse_Task_RequestMethod) Enum() *TaskQueueQueryTasksResponse_Task_RequestMethod {
	p := new(TaskQueueQueryTasksResponse_Task_RequestMethod)
	*p = x
	return p
}

func (x TaskQueueQueryTasksResponse_Task_RequestMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskQueueQueryTasksResponse_Task_RequestMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_taskqueue_taskqueue_service_proto_enumTypes[3].Descriptor()
}

func (TaskQueueQueryTasksResponse_Task_RequestMethod) Type() protoreflect.EnumType {
	return &file_internal_taskqueue_taskqueue_service_proto_enumTypes[3]
}

func (x TaskQueueQueryTasksResponse_Task_RequestMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TaskQueueQueryTasksResponse_Task_RequestMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TaskQueueQueryTasksResponse_Task_RequestMethod(num)
	return nil
}

// Deprecated: Use TaskQueueQueryTasksResponse_Task_RequestMethod.Descriptor instead.
func (TaskQueueQueryTasksResponse_Task_RequestMethod) EnumDescriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{30, 0, 0}
}

type TaskQueueServiceError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueueServiceError) Reset() {
	*x = TaskQueueServiceError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueServiceError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueServiceError) ProtoMessage() {}

func (x *TaskQueueServiceError) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueServiceError.ProtoReflect.Descriptor instead.
func (*TaskQueueServiceError) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{0}
}

type TaskPayload struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields
}

func (x *TaskPayload) Reset() {
	*x = TaskPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPayload) ProtoMessage() {}

func (x *TaskPayload) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPayload.ProtoReflect.Descriptor instead.
func (*TaskPayload) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{1}
}

type TaskQueueRetryParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetryLimit    *int32   `protobuf:"varint,1,opt,name=retry_limit,json=retryLimit" json:"retry_limit,omitempty"`
	AgeLimitSec   *int64   `protobuf:"varint,2,opt,name=age_limit_sec,json=ageLimitSec" json:"age_limit_sec,omitempty"`
	MinBackoffSec *float64 `protobuf:"fixed64,3,opt,name=min_backoff_sec,json=minBackoffSec,def=0.1" json:"min_backoff_sec,omitempty"`
	MaxBackoffSec *float64 `protobuf:"fixed64,4,opt,name=max_backoff_sec,json=maxBackoffSec,def=3600" json:"max_backoff_sec,omitempty"`
	MaxDoublings  *int32   `protobuf:"varint,5,opt,name=max_doublings,json=maxDoublings,def=16" json:"max_doublings,omitempty"`
}

// Default values for TaskQueueRetryParameters fields.
const (
	Default_TaskQueueRetryParameters_MinBackoffSec = float64(0.1)
	Default_TaskQueueRetryParameters_MaxBackoffSec = float64(3600)
	Default_TaskQueueRetryParameters_MaxDoublings  = int32(16)
)

func (x *TaskQueueRetryParameters) Reset() {
	*x = TaskQueueRetryParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueRetryParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueRetryParameters) ProtoMessage() {}

func (x *TaskQueueRetryParameters) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueRetryParameters.ProtoReflect.Descriptor instead.
func (*TaskQueueRetryParameters) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{2}
}

func (x *TaskQueueRetryParameters) GetRetryLimit() int32 {
	if x != nil && x.RetryLimit != nil {
		return *x.RetryLimit
	}
	return 0
}

func (x *TaskQueueRetryParameters) GetAgeLimitSec() int64 {
	if x != nil && x.AgeLimitSec != nil {
		return *x.AgeLimitSec
	}
	return 0
}

func (x *TaskQueueRetryParameters) GetMinBackoffSec() float64 {
	if x != nil && x.MinBackoffSec != nil {
		return *x.MinBackoffSec
	}
	return Default_TaskQueueRetryParameters_MinBackoffSec
}

func (x *TaskQueueRetryParameters) GetMaxBackoffSec() float64 {
	if x != nil && x.MaxBackoffSec != nil {
		return *x.MaxBackoffSec
	}
	return Default_TaskQueueRetryParameters_MaxBackoffSec
}

func (x *TaskQueueRetryParameters) GetMaxDoublings() int32 {
	if x != nil && x.MaxDoublings != nil {
		return *x.MaxDoublings
	}
	return Default_TaskQueueRetryParameters_MaxDoublings
}

type TaskQueueAcl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserEmail   [][]byte `protobuf:"bytes,1,rep,name=user_email,json=userEmail" json:"user_email,omitempty"`
	WriterEmail [][]byte `protobuf:"bytes,2,rep,name=writer_email,json=writerEmail" json:"writer_email,omitempty"`
}

func (x *TaskQueueAcl) Reset() {
	*x = TaskQueueAcl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueAcl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueAcl) ProtoMessage() {}

func (x *TaskQueueAcl) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueAcl.ProtoReflect.Descriptor instead.
func (*TaskQueueAcl) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{3}
}

func (x *TaskQueueAcl) GetUserEmail() [][]byte {
	if x != nil {
		return x.UserEmail
	}
	return nil
}

func (x *TaskQueueAcl) GetWriterEmail() [][]byte {
	if x != nil {
		return x.WriterEmail
	}
	return nil
}

type TaskQueueHttpHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *TaskQueueHttpHeader) Reset() {
	*x = TaskQueueHttpHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueHttpHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueHttpHeader) ProtoMessage() {}

func (x *TaskQueueHttpHeader) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueHttpHeader.ProtoReflect.Descriptor instead.
func (*TaskQueueHttpHeader) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{4}
}

func (x *TaskQueueHttpHeader) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TaskQueueHttpHeader) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TaskQueueMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueueMode) Reset() {
	*x = TaskQueueMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueMode) ProtoMessage() {}

func (x *TaskQueueMode) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueMode.ProtoReflect.Descriptor instead.
func (*TaskQueueMode) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{5}
}

type TaskQueueAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName       []byte                             `protobuf:"bytes,1,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	TaskName        []byte                             `protobuf:"bytes,2,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	EtaUsec         *int64                             `protobuf:"varint,3,req,name=eta_usec,json=etaUsec" json:"eta_usec,omitempty"`
	Method          *TaskQueueAddRequest_RequestMethod `protobuf:"varint,5,opt,name=method,enum=appengine.v2.TaskQueueAddRequest_RequestMethod,def=2" json:"method,omitempty"`
	Url             []byte                             `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Header          []*TaskQueueAddRequest_Header      `protobuf:"group,6,rep,name=Header,json=header" json:"header,omitempty"`
	Body            []byte                             `protobuf:"bytes,9,opt,name=body" json:"body,omitempty"`
	Transaction     *datastore.Transaction             `protobuf:"bytes,10,opt,name=transaction" json:"transaction,omitempty"`
	AppId           []byte                             `protobuf:"bytes,11,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Crontimetable   *TaskQueueAddRequest_CronTimetable `protobuf:"group,12,opt,name=CronTimetable,json=crontimetable" json:"crontimetable,omitempty"`
	Description     []byte                             `protobuf:"bytes,15,opt,name=description" json:"description,omitempty"`
	Payload         *TaskPayload                       `protobuf:"bytes,16,opt,name=payload" json:"payload,omitempty"`
	RetryParameters *TaskQueueRetryParameters          `protobuf:"bytes,17,opt,name=retry_parameters,json=retryParameters" json:"retry_parameters,omitempty"`
	Mode            *TaskQueueMode_Mode                `protobuf:"varint,18,opt,name=mode,enum=appengine.v2.TaskQueueMode_Mode,def=0" json:"mode,omitempty"`
	Tag             []byte                             `protobuf:"bytes,19,opt,name=tag" json:"tag,omitempty"`
}

// Default values for TaskQueueAddRequest fields.
const (
	Default_TaskQueueAddRequest_Method = TaskQueueAddRequest_POST
	Default_TaskQueueAddRequest_Mode   = TaskQueueMode_PUSH
)

func (x *TaskQueueAddRequest) Reset() {
	*x = TaskQueueAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueAddRequest) ProtoMessage() {}

func (x *TaskQueueAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueAddRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueAddRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{6}
}

func (x *TaskQueueAddRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueAddRequest) GetTaskName() []byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

func (x *TaskQueueAddRequest) GetEtaUsec() int64 {
	if x != nil && x.EtaUsec != nil {
		return *x.EtaUsec
	}
	return 0
}

func (x *TaskQueueAddRequest) GetMethod() TaskQueueAddRequest_RequestMethod {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_TaskQueueAddRequest_Method
}

func (x *TaskQueueAddRequest) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *TaskQueueAddRequest) GetHeader() []*TaskQueueAddRequest_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TaskQueueAddRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *TaskQueueAddRequest) GetTransaction() *datastore.Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TaskQueueAddRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueAddRequest) GetCrontimetable() *TaskQueueAddRequest_CronTimetable {
	if x != nil {
		return x.Crontimetable
	}
	return nil
}

func (x *TaskQueueAddRequest) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *TaskQueueAddRequest) GetPayload() *TaskPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskQueueAddRequest) GetRetryParameters() *TaskQueueRetryParameters {
	if x != nil {
		return x.RetryParameters
	}
	return nil
}

func (x *TaskQueueAddRequest) GetMode() TaskQueueMode_Mode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return Default_TaskQueueAddRequest_Mode
}

func (x *TaskQueueAddRequest) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TaskQueueAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChosenTaskName []byte `protobuf:"bytes,1,opt,name=chosen_task_name,json=chosenTaskName" json:"chosen_task_name,omitempty"`
}

func (x *TaskQueueAddResponse) Reset() {
	*x = TaskQueueAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueAddResponse) ProtoMessage() {}

func (x *TaskQueueAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueAddResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueAddResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{7}
}

func (x *TaskQueueAddResponse) GetChosenTaskName() []byte {
	if x != nil {
		return x.ChosenTaskName
	}
	return nil
}

type TaskQueueBulkAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddRequest []*TaskQueueAddRequest `protobuf:"bytes,1,rep,name=add_request,json=addRequest" json:"add_request,omitempty"`
}

func (x *TaskQueueBulkAddRequest) Reset() {
	*x = TaskQueueBulkAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueBulkAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueBulkAddRequest) ProtoMessage() {}

func (x *TaskQueueBulkAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueBulkAddRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueBulkAddRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{8}
}

func (x *TaskQueueBulkAddRequest) GetAddRequest() []*TaskQueueAddRequest {
	if x != nil {
		return x.AddRequest
	}
	return nil
}

type TaskQueueBulkAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taskresult []*TaskQueueBulkAddResponse_TaskResult `protobuf:"group,1,rep,name=TaskResult,json=taskresult" json:"taskresult,omitempty"`
}

func (x *TaskQueueBulkAddResponse) Reset() {
	*x = TaskQueueBulkAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueBulkAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueBulkAddResponse) ProtoMessage() {}

func (x *TaskQueueBulkAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueBulkAddResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueBulkAddResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{9}
}

func (x *TaskQueueBulkAddResponse) GetTaskresult() []*TaskQueueBulkAddResponse_TaskResult {
	if x != nil {
		return x.Taskresult
	}
	return nil
}

type TaskQueueDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName []byte   `protobuf:"bytes,1,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	TaskName  [][]byte `protobuf:"bytes,2,rep,name=task_name,json=taskName" json:"task_name,omitempty"`
	AppId     []byte   `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *TaskQueueDeleteRequest) Reset() {
	*x = TaskQueueDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueDeleteRequest) ProtoMessage() {}

func (x *TaskQueueDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueDeleteRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueDeleteRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{10}
}

func (x *TaskQueueDeleteRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueDeleteRequest) GetTaskName() [][]byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

func (x *TaskQueueDeleteRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

type TaskQueueDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []TaskQueueServiceError_ErrorCode `protobuf:"varint,3,rep,name=result,enum=appengine.v2.TaskQueueServiceError_ErrorCode" json:"result,omitempty"`
}

func (x *TaskQueueDeleteResponse) Reset() {
	*x = TaskQueueDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueDeleteResponse) ProtoMessage() {}

func (x *TaskQueueDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueDeleteResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueDeleteResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{11}
}

func (x *TaskQueueDeleteResponse) GetResult() []TaskQueueServiceError_ErrorCode {
	if x != nil {
		return x.Result
	}
	return nil
}

type TaskQueueForceRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     []byte `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName []byte `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	TaskName  []byte `protobuf:"bytes,3,req,name=task_name,json=taskName" json:"task_name,omitempty"`
}

func (x *TaskQueueForceRunRequest) Reset() {
	*x = TaskQueueForceRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueForceRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueForceRunRequest) ProtoMessage() {}

func (x *TaskQueueForceRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueForceRunRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueForceRunRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{12}
}

func (x *TaskQueueForceRunRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueForceRunRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueForceRunRequest) GetTaskName() []byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

type TaskQueueForceRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TaskQueueServiceError_ErrorCode `protobuf:"varint,3,req,name=result,enum=appengine.v2.TaskQueueServiceError_ErrorCode" json:"result,omitempty"`
}

func (x *TaskQueueForceRunResponse) Reset() {
	*x = TaskQueueForceRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueForceRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueForceRunResponse) ProtoMessage() {}

func (x *TaskQueueForceRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueForceRunResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueForceRunResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{13}
}

func (x *TaskQueueForceRunResponse) GetResult() TaskQueueServiceError_ErrorCode {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return TaskQueueServiceError_OK
}

type TaskQueueUpdateQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId                 []byte                    `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName             []byte                    `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	BucketRefillPerSecond *float64                  `protobuf:"fixed64,3,req,name=bucket_refill_per_second,json=bucketRefillPerSecond" json:"bucket_refill_per_second,omitempty"`
	BucketCapacity        *int32                    `protobuf:"varint,4,req,name=bucket_capacity,json=bucketCapacity" json:"bucket_capacity,omitempty"`
	UserSpecifiedRate     *string                   `protobuf:"bytes,5,opt,name=user_specified_rate,json=userSpecifiedRate" json:"user_specified_rate,omitempty"`
	RetryParameters       *TaskQueueRetryParameters `protobuf:"bytes,6,opt,name=retry_parameters,json=retryParameters" json:"retry_parameters,omitempty"`
	MaxConcurrentRequests *int32                    `protobuf:"varint,7,opt,name=max_concurrent_requests,json=maxConcurrentRequests" json:"max_concurrent_requests,omitempty"`
	Mode                  *TaskQueueMode_Mode       `protobuf:"varint,8,opt,name=mode,enum=appengine.v2.TaskQueueMode_Mode,def=0" json:"mode,omitempty"`
	Acl                   *TaskQueueAcl             `protobuf:"bytes,9,opt,name=acl" json:"acl,omitempty"`
	HeaderOverride        []*TaskQueueHttpHeader    `protobuf:"bytes,10,rep,name=header_override,json=headerOverride" json:"header_override,omitempty"`
}

// Default values for TaskQueueUpdateQueueRequest fields.
const (
	Default_TaskQueueUpdateQueueRequest_Mode = TaskQueueMode_PUSH
)

func (x *TaskQueueUpdateQueueRequest) Reset() {
	*x = TaskQueueUpdateQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueUpdateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueUpdateQueueRequest) ProtoMessage() {}

func (x *TaskQueueUpdateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueUpdateQueueRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueUpdateQueueRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{14}
}

func (x *TaskQueueUpdateQueueRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueUpdateQueueRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueUpdateQueueRequest) GetBucketRefillPerSecond() float64 {
	if x != nil && x.BucketRefillPerSecond != nil {
		return *x.BucketRefillPerSecond
	}
	return 0
}

func (x *TaskQueueUpdateQueueRequest) GetBucketCapacity() int32 {
	if x != nil && x.BucketCapacity != nil {
		return *x.BucketCapacity
	}
	return 0
}

func (x *TaskQueueUpdateQueueRequest) GetUserSpecifiedRate() string {
	if x != nil && x.UserSpecifiedRate != nil {
		return *x.UserSpecifiedRate
	}
	return ""
}

func (x *TaskQueueUpdateQueueRequest) GetRetryParameters() *TaskQueueRetryParameters {
	if x != nil {
		return x.RetryParameters
	}
	return nil
}

func (x *TaskQueueUpdateQueueRequest) GetMaxConcurrentRequests() int32 {
	if x != nil && x.MaxConcurrentRequests != nil {
		return *x.MaxConcurrentRequests
	}
	return 0
}

func (x *TaskQueueUpdateQueueRequest) GetMode() TaskQueueMode_Mode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return Default_TaskQueueUpdateQueueRequest_Mode
}

func (x *TaskQueueUpdateQueueRequest) GetAcl() *TaskQueueAcl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *TaskQueueUpdateQueueRequest) GetHeaderOverride() []*TaskQueueHttpHeader {
	if x != nil {
		return x.HeaderOverride
	}
	return nil
}

type TaskQueueUpdateQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueueUpdateQueueResponse) Reset() {
	*x = TaskQueueUpdateQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueUpdateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueUpdateQueueResponse) ProtoMessage() {}

func (x *TaskQueueUpdateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueUpdateQueueResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueUpdateQueueResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{15}
}

type TaskQueueFetchQueuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   []byte `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	MaxRows *int32 `protobuf:"varint,2,req,name=max_rows,json=maxRows" json:"max_rows,omitempty"`
}

func (x *TaskQueueFetchQueuesRequest) Reset() {
	*x = TaskQueueFetchQueuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchQueuesRequest) ProtoMessage() {}

func (x *TaskQueueFetchQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchQueuesRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchQueuesRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{16}
}

func (x *TaskQueueFetchQueuesRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueFetchQueuesRequest) GetMaxRows() int32 {
	if x != nil && x.MaxRows != nil {
		return *x.MaxRows
	}
	return 0
}

type TaskQueueFetchQueuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue []*TaskQueueFetchQueuesResponse_Queue `protobuf:"group,1,rep,name=Queue,json=queue" json:"queue,omitempty"`
}

func (x *TaskQueueFetchQueuesResponse) Reset() {
	*x = TaskQueueFetchQueuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchQueuesResponse) ProtoMessage() {}

func (x *TaskQueueFetchQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchQueuesResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchQueuesResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{17}
}

func (x *TaskQueueFetchQueuesResponse) GetQueue() []*TaskQueueFetchQueuesResponse_Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

type TaskQueueFetchQueueStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       []byte   `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName   [][]byte `protobuf:"bytes,2,rep,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	MaxNumTasks *int32   `protobuf:"varint,3,opt,name=max_num_tasks,json=maxNumTasks,def=0" json:"max_num_tasks,omitempty"`
}

// Default values for TaskQueueFetchQueueStatsRequest fields.
const (
	Default_TaskQueueFetchQueueStatsRequest_MaxNumTasks = int32(0)
)

func (x *TaskQueueFetchQueueStatsRequest) Reset() {
	*x = TaskQueueFetchQueueStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchQueueStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchQueueStatsRequest) ProtoMessage() {}

func (x *TaskQueueFetchQueueStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchQueueStatsRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchQueueStatsRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{18}
}

func (x *TaskQueueFetchQueueStatsRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueFetchQueueStatsRequest) GetQueueName() [][]byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueFetchQueueStatsRequest) GetMaxNumTasks() int32 {
	if x != nil && x.MaxNumTasks != nil {
		return *x.MaxNumTasks
	}
	return Default_TaskQueueFetchQueueStatsRequest_MaxNumTasks
}

type TaskQueueScannerQueueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutedLastMinute      *int64   `protobuf:"varint,1,req,name=executed_last_minute,json=executedLastMinute" json:"executed_last_minute,omitempty"`
	ExecutedLastHour        *int64   `protobuf:"varint,2,req,name=executed_last_hour,json=executedLastHour" json:"executed_last_hour,omitempty"`
	SamplingDurationSeconds *float64 `protobuf:"fixed64,3,req,name=sampling_duration_seconds,json=samplingDurationSeconds" json:"sampling_duration_seconds,omitempty"`
	RequestsInFlight        *int32   `protobuf:"varint,4,opt,name=requests_in_flight,json=requestsInFlight" json:"requests_in_flight,omitempty"`
	EnforcedRate            *float64 `protobuf:"fixed64,5,opt,name=enforced_rate,json=enforcedRate" json:"enforced_rate,omitempty"`
}

func (x *TaskQueueScannerQueueInfo) Reset() {
	*x = TaskQueueScannerQueueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueScannerQueueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueScannerQueueInfo) ProtoMessage() {}

func (x *TaskQueueScannerQueueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueScannerQueueInfo.ProtoReflect.Descriptor instead.
func (*TaskQueueScannerQueueInfo) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{19}
}

func (x *TaskQueueScannerQueueInfo) GetExecutedLastMinute() int64 {
	if x != nil && x.ExecutedLastMinute != nil {
		return *x.ExecutedLastMinute
	}
	return 0
}

func (x *TaskQueueScannerQueueInfo) GetExecutedLastHour() int64 {
	if x != nil && x.ExecutedLastHour != nil {
		return *x.ExecutedLastHour
	}
	return 0
}

func (x *TaskQueueScannerQueueInfo) GetSamplingDurationSeconds() float64 {
	if x != nil && x.SamplingDurationSeconds != nil {
		return *x.SamplingDurationSeconds
	}
	return 0
}

func (x *TaskQueueScannerQueueInfo) GetRequestsInFlight() int32 {
	if x != nil && x.RequestsInFlight != nil {
		return *x.RequestsInFlight
	}
	return 0
}

func (x *TaskQueueScannerQueueInfo) GetEnforcedRate() float64 {
	if x != nil && x.EnforcedRate != nil {
		return *x.EnforcedRate
	}
	return 0
}

type TaskQueueFetchQueueStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queuestats []*TaskQueueFetchQueueStatsResponse_QueueStats `protobuf:"group,1,rep,name=QueueStats,json=queuestats" json:"queuestats,omitempty"`
}

func (x *TaskQueueFetchQueueStatsResponse) Reset() {
	*x = TaskQueueFetchQueueStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchQueueStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchQueueStatsResponse) ProtoMessage() {}

func (x *TaskQueueFetchQueueStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchQueueStatsResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchQueueStatsResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{20}
}

func (x *TaskQueueFetchQueueStatsResponse) GetQueuestats() []*TaskQueueFetchQueueStatsResponse_QueueStats {
	if x != nil {
		return x.Queuestats
	}
	return nil
}

type TaskQueuePauseQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     []byte `protobuf:"bytes,1,req,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName []byte `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	Pause     *bool  `protobuf:"varint,3,req,name=pause" json:"pause,omitempty"`
}

func (x *TaskQueuePauseQueueRequest) Reset() {
	*x = TaskQueuePauseQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePauseQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePauseQueueRequest) ProtoMessage() {}

func (x *TaskQueuePauseQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePauseQueueRequest.ProtoReflect.Descriptor instead.
func (*TaskQueuePauseQueueRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{21}
}

func (x *TaskQueuePauseQueueRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueuePauseQueueRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueuePauseQueueRequest) GetPause() bool {
	if x != nil && x.Pause != nil {
		return *x.Pause
	}
	return false
}

type TaskQueuePauseQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueuePauseQueueResponse) Reset() {
	*x = TaskQueuePauseQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePauseQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePauseQueueResponse) ProtoMessage() {}

func (x *TaskQueuePauseQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePauseQueueResponse.ProtoReflect.Descriptor instead.
func (*TaskQueuePauseQueueResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{22}
}

type TaskQueuePurgeQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     []byte `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName []byte `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
}

func (x *TaskQueuePurgeQueueRequest) Reset() {
	*x = TaskQueuePurgeQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePurgeQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePurgeQueueRequest) ProtoMessage() {}

func (x *TaskQueuePurgeQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePurgeQueueRequest.ProtoReflect.Descriptor instead.
func (*TaskQueuePurgeQueueRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{23}
}

func (x *TaskQueuePurgeQueueRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueuePurgeQueueRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

type TaskQueuePurgeQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueuePurgeQueueResponse) Reset() {
	*x = TaskQueuePurgeQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueuePurgeQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueuePurgeQueueResponse) ProtoMessage() {}

func (x *TaskQueuePurgeQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueuePurgeQueueResponse.ProtoReflect.Descriptor instead.
func (*TaskQueuePurgeQueueResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{24}
}

type TaskQueueDeleteQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     []byte `protobuf:"bytes,1,req,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName []byte `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
}

func (x *TaskQueueDeleteQueueRequest) Reset() {
	*x = TaskQueueDeleteQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueDeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueDeleteQueueRequest) ProtoMessage() {}

func (x *TaskQueueDeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueDeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueDeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{25}
}

func (x *TaskQueueDeleteQueueRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueDeleteQueueRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

type TaskQueueDeleteQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueueDeleteQueueResponse) Reset() {
	*x = TaskQueueDeleteQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueDeleteQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueDeleteQueueResponse) ProtoMessage() {}

func (x *TaskQueueDeleteQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueDeleteQueueResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueDeleteQueueResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{26}
}

type TaskQueueDeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId []byte `protobuf:"bytes,1,req,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *TaskQueueDeleteGroupRequest) Reset() {
	*x = TaskQueueDeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueDeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueDeleteGroupRequest) ProtoMessage() {}

func (x *TaskQueueDeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueDeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueDeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{27}
}

func (x *TaskQueueDeleteGroupRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

type TaskQueueDeleteGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaskQueueDeleteGroupResponse) Reset() {
	*x = TaskQueueDeleteGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueDeleteGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueDeleteGroupResponse) ProtoMessage() {}

func (x *TaskQueueDeleteGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueDeleteGroupResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueDeleteGroupResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{28}
}

type TaskQueueQueryTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId         []byte `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName     []byte `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	StartTaskName []byte `protobuf:"bytes,3,opt,name=start_task_name,json=startTaskName" json:"start_task_name,omitempty"`
	StartEtaUsec  *int64 `protobuf:"varint,4,opt,name=start_eta_usec,json=startEtaUsec" json:"start_eta_usec,omitempty"`
	StartTag      []byte `protobuf:"bytes,6,opt,name=start_tag,json=startTag" json:"start_tag,omitempty"`
	MaxRows       *int32 `protobuf:"varint,5,opt,name=max_rows,json=maxRows,def=1" json:"max_rows,omitempty"`
}

// Default values for TaskQueueQueryTasksRequest fields.
const (
	Default_TaskQueueQueryTasksRequest_MaxRows = int32(1)
)

func (x *TaskQueueQueryTasksRequest) Reset() {
	*x = TaskQueueQueryTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryTasksRequest) ProtoMessage() {}

func (x *TaskQueueQueryTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryTasksRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryTasksRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{29}
}

func (x *TaskQueueQueryTasksRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueQueryTasksRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueQueryTasksRequest) GetStartTaskName() []byte {
	if x != nil {
		return x.StartTaskName
	}
	return nil
}

func (x *TaskQueueQueryTasksRequest) GetStartEtaUsec() int64 {
	if x != nil && x.StartEtaUsec != nil {
		return *x.StartEtaUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksRequest) GetStartTag() []byte {
	if x != nil {
		return x.StartTag
	}
	return nil
}

func (x *TaskQueueQueryTasksRequest) GetMaxRows() int32 {
	if x != nil && x.MaxRows != nil {
		return *x.MaxRows
	}
	return Default_TaskQueueQueryTasksRequest_MaxRows
}

type TaskQueueQueryTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task []*TaskQueueQueryTasksResponse_Task `protobuf:"group,1,rep,name=Task,json=task" json:"task,omitempty"`
}

func (x *TaskQueueQueryTasksResponse) Reset() {
	*x = TaskQueueQueryTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryTasksResponse) ProtoMessage() {}

func (x *TaskQueueQueryTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryTasksResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryTasksResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{30}
}

func (x *TaskQueueQueryTasksResponse) GetTask() []*TaskQueueQueryTasksResponse_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type TaskQueueFetchTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     []byte `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	QueueName []byte `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	TaskName  []byte `protobuf:"bytes,3,req,name=task_name,json=taskName" json:"task_name,omitempty"`
}

func (x *TaskQueueFetchTaskRequest) Reset() {
	*x = TaskQueueFetchTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchTaskRequest) ProtoMessage() {}

func (x *TaskQueueFetchTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchTaskRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchTaskRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{31}
}

func (x *TaskQueueFetchTaskRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueFetchTaskRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueFetchTaskRequest) GetTaskName() []byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

type TaskQueueFetchTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *TaskQueueQueryTasksResponse `protobuf:"bytes,1,req,name=task" json:"task,omitempty"`
}

func (x *TaskQueueFetchTaskResponse) Reset() {
	*x = TaskQueueFetchTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchTaskResponse) ProtoMessage() {}

func (x *TaskQueueFetchTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchTaskResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchTaskResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{32}
}

func (x *TaskQueueFetchTaskResponse) GetTask() *TaskQueueQueryTasksResponse {
	if x != nil {
		return x.Task
	}
	return nil
}

type TaskQueueUpdateStorageLimitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId []byte `protobuf:"bytes,1,req,name=app_id,json=appId" json:"app_id,omitempty"`
	Limit *int64 `protobuf:"varint,2,req,name=limit" json:"limit,omitempty"`
}

func (x *TaskQueueUpdateStorageLimitRequest) Reset() {
	*x = TaskQueueUpdateStorageLimitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueUpdateStorageLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueUpdateStorageLimitRequest) ProtoMessage() {}

func (x *TaskQueueUpdateStorageLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueUpdateStorageLimitRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueUpdateStorageLimitRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{33}
}

func (x *TaskQueueUpdateStorageLimitRequest) GetAppId() []byte {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *TaskQueueUpdateStorageLimitRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type TaskQueueUpdateStorageLimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewLimit *int64 `protobuf:"varint,1,req,name=new_limit,json=newLimit" json:"new_limit,omitempty"`
}

func (x *TaskQueueUpdateStorageLimitResponse) Reset() {
	*x = TaskQueueUpdateStorageLimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueUpdateStorageLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueUpdateStorageLimitResponse) ProtoMessage() {}

func (x *TaskQueueUpdateStorageLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueUpdateStorageLimitResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueUpdateStorageLimitResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{34}
}

func (x *TaskQueueUpdateStorageLimitResponse) GetNewLimit() int64 {
	if x != nil && x.NewLimit != nil {
		return *x.NewLimit
	}
	return 0
}

type TaskQueueQueryAndOwnTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName    []byte   `protobuf:"bytes,1,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	LeaseSeconds *float64 `protobuf:"fixed64,2,req,name=lease_seconds,json=leaseSeconds" json:"lease_seconds,omitempty"`
	MaxTasks     *int64   `protobuf:"varint,3,req,name=max_tasks,json=maxTasks" json:"max_tasks,omitempty"`
	GroupByTag   *bool    `protobuf:"varint,4,opt,name=group_by_tag,json=groupByTag,def=0" json:"group_by_tag,omitempty"`
	Tag          []byte   `protobuf:"bytes,5,opt,name=tag" json:"tag,omitempty"`
}

// Default values for TaskQueueQueryAndOwnTasksRequest fields.
const (
	Default_TaskQueueQueryAndOwnTasksRequest_GroupByTag = bool(false)
)

func (x *TaskQueueQueryAndOwnTasksRequest) Reset() {
	*x = TaskQueueQueryAndOwnTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryAndOwnTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryAndOwnTasksRequest) ProtoMessage() {}

func (x *TaskQueueQueryAndOwnTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryAndOwnTasksRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryAndOwnTasksRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{35}
}

func (x *TaskQueueQueryAndOwnTasksRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueQueryAndOwnTasksRequest) GetLeaseSeconds() float64 {
	if x != nil && x.LeaseSeconds != nil {
		return *x.LeaseSeconds
	}
	return 0
}

func (x *TaskQueueQueryAndOwnTasksRequest) GetMaxTasks() int64 {
	if x != nil && x.MaxTasks != nil {
		return *x.MaxTasks
	}
	return 0
}

func (x *TaskQueueQueryAndOwnTasksRequest) GetGroupByTag() bool {
	if x != nil && x.GroupByTag != nil {
		return *x.GroupByTag
	}
	return Default_TaskQueueQueryAndOwnTasksRequest_GroupByTag
}

func (x *TaskQueueQueryAndOwnTasksRequest) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

type TaskQueueQueryAndOwnTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task []*TaskQueueQueryAndOwnTasksResponse_Task `protobuf:"group,1,rep,name=Task,json=task" json:"task,omitempty"`
}

func (x *TaskQueueQueryAndOwnTasksResponse) Reset() {
	*x = TaskQueueQueryAndOwnTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryAndOwnTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryAndOwnTasksResponse) ProtoMessage() {}

func (x *TaskQueueQueryAndOwnTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryAndOwnTasksResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryAndOwnTasksResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{36}
}

func (x *TaskQueueQueryAndOwnTasksResponse) GetTask() []*TaskQueueQueryAndOwnTasksResponse_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type TaskQueueModifyTaskLeaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName    []byte   `protobuf:"bytes,1,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	TaskName     []byte   `protobuf:"bytes,2,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	EtaUsec      *int64   `protobuf:"varint,3,req,name=eta_usec,json=etaUsec" json:"eta_usec,omitempty"`
	LeaseSeconds *float64 `protobuf:"fixed64,4,req,name=lease_seconds,json=leaseSeconds" json:"lease_seconds,omitempty"`
}

func (x *TaskQueueModifyTaskLeaseRequest) Reset() {
	*x = TaskQueueModifyTaskLeaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueModifyTaskLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueModifyTaskLeaseRequest) ProtoMessage() {}

func (x *TaskQueueModifyTaskLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueModifyTaskLeaseRequest.ProtoReflect.Descriptor instead.
func (*TaskQueueModifyTaskLeaseRequest) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{37}
}

func (x *TaskQueueModifyTaskLeaseRequest) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueModifyTaskLeaseRequest) GetTaskName() []byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

func (x *TaskQueueModifyTaskLeaseRequest) GetEtaUsec() int64 {
	if x != nil && x.EtaUsec != nil {
		return *x.EtaUsec
	}
	return 0
}

func (x *TaskQueueModifyTaskLeaseRequest) GetLeaseSeconds() float64 {
	if x != nil && x.LeaseSeconds != nil {
		return *x.LeaseSeconds
	}
	return 0
}

type TaskQueueModifyTaskLeaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedEtaUsec *int64 `protobuf:"varint,1,req,name=updated_eta_usec,json=updatedEtaUsec" json:"updated_eta_usec,omitempty"`
}

func (x *TaskQueueModifyTaskLeaseResponse) Reset() {
	*x = TaskQueueModifyTaskLeaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueModifyTaskLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueModifyTaskLeaseResponse) ProtoMessage() {}

func (x *TaskQueueModifyTaskLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueModifyTaskLeaseResponse.ProtoReflect.Descriptor instead.
func (*TaskQueueModifyTaskLeaseResponse) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{38}
}

func (x *TaskQueueModifyTaskLeaseResponse) GetUpdatedEtaUsec() int64 {
	if x != nil && x.UpdatedEtaUsec != nil {
		return *x.UpdatedEtaUsec
	}
	return 0
}

type TaskQueueAddRequest_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,7,req,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,8,req,name=value" json:"value,omitempty"`
}

func (x *TaskQueueAddRequest_Header) Reset() {
	*x = TaskQueueAddRequest_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueAddRequest_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueAddRequest_Header) ProtoMessage() {}

func (x *TaskQueueAddRequest_Header) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueAddRequest_Header.ProtoReflect.Descriptor instead.
func (*TaskQueueAddRequest_Header) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TaskQueueAddRequest_Header) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TaskQueueAddRequest_Header) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TaskQueueAddRequest_CronTimetable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule []byte `protobuf:"bytes,13,req,name=schedule" json:"schedule,omitempty"`
	Timezone []byte `protobuf:"bytes,14,req,name=timezone" json:"timezone,omitempty"`
}

func (x *TaskQueueAddRequest_CronTimetable) Reset() {
	*x = TaskQueueAddRequest_CronTimetable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueAddRequest_CronTimetable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueAddRequest_CronTimetable) ProtoMessage() {}

func (x *TaskQueueAddRequest_CronTimetable) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueAddRequest_CronTimetable.ProtoReflect.Descriptor instead.
func (*TaskQueueAddRequest_CronTimetable) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{6, 1}
}

func (x *TaskQueueAddRequest_CronTimetable) GetSchedule() []byte {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *TaskQueueAddRequest_CronTimetable) GetTimezone() []byte {
	if x != nil {
		return x.Timezone
	}
	return nil
}

type TaskQueueBulkAddResponse_TaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *TaskQueueServiceError_ErrorCode `protobuf:"varint,2,req,name=result,enum=appengine.v2.TaskQueueServiceError_ErrorCode" json:"result,omitempty"`
	ChosenTaskName []byte                           `protobuf:"bytes,3,opt,name=chosen_task_name,json=chosenTaskName" json:"chosen_task_name,omitempty"`
}

func (x *TaskQueueBulkAddResponse_TaskResult) Reset() {
	*x = TaskQueueBulkAddResponse_TaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueBulkAddResponse_TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueBulkAddResponse_TaskResult) ProtoMessage() {}

func (x *TaskQueueBulkAddResponse_TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueBulkAddResponse_TaskResult.ProtoReflect.Descriptor instead.
func (*TaskQueueBulkAddResponse_TaskResult) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TaskQueueBulkAddResponse_TaskResult) GetResult() TaskQueueServiceError_ErrorCode {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return TaskQueueServiceError_OK
}

func (x *TaskQueueBulkAddResponse_TaskResult) GetChosenTaskName() []byte {
	if x != nil {
		return x.ChosenTaskName
	}
	return nil
}

type TaskQueueFetchQueuesResponse_Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName             []byte                    `protobuf:"bytes,2,req,name=queue_name,json=queueName" json:"queue_name,omitempty"`
	BucketRefillPerSecond *float64                  `protobuf:"fixed64,3,req,name=bucket_refill_per_second,json=bucketRefillPerSecond" json:"bucket_refill_per_second,omitempty"`
	BucketCapacity        *float64                  `protobuf:"fixed64,4,req,name=bucket_capacity,json=bucketCapacity" json:"bucket_capacity,omitempty"`
	UserSpecifiedRate     *string                   `protobuf:"bytes,5,opt,name=user_specified_rate,json=userSpecifiedRate" json:"user_specified_rate,omitempty"`
	Paused                *bool                     `protobuf:"varint,6,req,name=paused,def=0" json:"paused,omitempty"`
	RetryParameters       *TaskQueueRetryParameters `protobuf:"bytes,7,opt,name=retry_parameters,json=retryParameters" json:"retry_parameters,omitempty"`
	MaxConcurrentRequests *int32                    `protobuf:"varint,8,opt,name=max_concurrent_requests,json=maxConcurrentRequests" json:"max_concurrent_requests,omitempty"`
	Mode                  *TaskQueueMode_Mode       `protobuf:"varint,9,opt,name=mode,enum=appengine.v2.TaskQueueMode_Mode,def=0" json:"mode,omitempty"`
	Acl                   *TaskQueueAcl             `protobuf:"bytes,10,opt,name=acl" json:"acl,omitempty"`
	HeaderOverride        []*TaskQueueHttpHeader    `protobuf:"bytes,11,rep,name=header_override,json=headerOverride" json:"header_override,omitempty"`
	CreatorName           *string                   `protobuf:"bytes,12,opt,name=creator_name,json=creatorName,def=apphosting" json:"creator_name,omitempty"`
}

// Default values for TaskQueueFetchQueuesResponse_Queue fields.
const (
	Default_TaskQueueFetchQueuesResponse_Queue_Paused      = bool(false)
	Default_TaskQueueFetchQueuesResponse_Queue_Mode        = TaskQueueMode_PUSH
	Default_TaskQueueFetchQueuesResponse_Queue_CreatorName = string("apphosting")
)

func (x *TaskQueueFetchQueuesResponse_Queue) Reset() {
	*x = TaskQueueFetchQueuesResponse_Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchQueuesResponse_Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchQueuesResponse_Queue) ProtoMessage() {}

func (x *TaskQueueFetchQueuesResponse_Queue) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchQueuesResponse_Queue.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchQueuesResponse_Queue) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{17, 0}
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetQueueName() []byte {
	if x != nil {
		return x.QueueName
	}
	return nil
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetBucketRefillPerSecond() float64 {
	if x != nil && x.BucketRefillPerSecond != nil {
		return *x.BucketRefillPerSecond
	}
	return 0
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetBucketCapacity() float64 {
	if x != nil && x.BucketCapacity != nil {
		return *x.BucketCapacity
	}
	return 0
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetUserSpecifiedRate() string {
	if x != nil && x.UserSpecifiedRate != nil {
		return *x.UserSpecifiedRate
	}
	return ""
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetPaused() bool {
	if x != nil && x.Paused != nil {
		return *x.Paused
	}
	return Default_TaskQueueFetchQueuesResponse_Queue_Paused
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetRetryParameters() *TaskQueueRetryParameters {
	if x != nil {
		return x.RetryParameters
	}
	return nil
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetMaxConcurrentRequests() int32 {
	if x != nil && x.MaxConcurrentRequests != nil {
		return *x.MaxConcurrentRequests
	}
	return 0
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetMode() TaskQueueMode_Mode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return Default_TaskQueueFetchQueuesResponse_Queue_Mode
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetAcl() *TaskQueueAcl {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetHeaderOverride() []*TaskQueueHttpHeader {
	if x != nil {
		return x.HeaderOverride
	}
	return nil
}

func (x *TaskQueueFetchQueuesResponse_Queue) GetCreatorName() string {
	if x != nil && x.CreatorName != nil {
		return *x.CreatorName
	}
	return Default_TaskQueueFetchQueuesResponse_Queue_CreatorName
}

type TaskQueueFetchQueueStatsResponse_QueueStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumTasks      *int32                     `protobuf:"varint,2,req,name=num_tasks,json=numTasks" json:"num_tasks,omitempty"`
	OldestEtaUsec *int64                     `protobuf:"varint,3,req,name=oldest_eta_usec,json=oldestEtaUsec" json:"oldest_eta_usec,omitempty"`
	ScannerInfo   *TaskQueueScannerQueueInfo `protobuf:"bytes,4,opt,name=scanner_info,json=scannerInfo" json:"scanner_info,omitempty"`
}

func (x *TaskQueueFetchQueueStatsResponse_QueueStats) Reset() {
	*x = TaskQueueFetchQueueStatsResponse_QueueStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueFetchQueueStatsResponse_QueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueFetchQueueStatsResponse_QueueStats) ProtoMessage() {}

func (x *TaskQueueFetchQueueStatsResponse_QueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueFetchQueueStatsResponse_QueueStats.ProtoReflect.Descriptor instead.
func (*TaskQueueFetchQueueStatsResponse_QueueStats) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{20, 0}
}

func (x *TaskQueueFetchQueueStatsResponse_QueueStats) GetNumTasks() int32 {
	if x != nil && x.NumTasks != nil {
		return *x.NumTasks
	}
	return 0
}

func (x *TaskQueueFetchQueueStatsResponse_QueueStats) GetOldestEtaUsec() int64 {
	if x != nil && x.OldestEtaUsec != nil {
		return *x.OldestEtaUsec
	}
	return 0
}

func (x *TaskQueueFetchQueueStatsResponse_QueueStats) GetScannerInfo() *TaskQueueScannerQueueInfo {
	if x != nil {
		return x.ScannerInfo
	}
	return nil
}

type TaskQueueQueryTasksResponse_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName         []byte                                          `protobuf:"bytes,2,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	EtaUsec          *int64                                          `protobuf:"varint,3,req,name=eta_usec,json=etaUsec" json:"eta_usec,omitempty"`
	Url              []byte                                          `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Method           *TaskQueueQueryTasksResponse_Task_RequestMethod `protobuf:"varint,5,opt,name=method,enum=appengine.v2.TaskQueueQueryTasksResponse_Task_RequestMethod" json:"method,omitempty"`
	RetryCount       *int32                                          `protobuf:"varint,6,opt,name=retry_count,json=retryCount,def=0" json:"retry_count,omitempty"`
	Header           []*TaskQueueQueryTasksResponse_Task_Header      `protobuf:"group,7,rep,name=Header,json=header" json:"header,omitempty"`
	BodySize         *int32                                          `protobuf:"varint,10,opt,name=body_size,json=bodySize" json:"body_size,omitempty"`
	Body             []byte                                          `protobuf:"bytes,11,opt,name=body" json:"body,omitempty"`
	CreationTimeUsec *int64                                          `protobuf:"varint,12,req,name=creation_time_usec,json=creationTimeUsec" json:"creation_time_usec,omitempty"`
	Crontimetable    *TaskQueueQueryTasksResponse_Task_CronTimetable `protobuf:"group,13,opt,name=CronTimetable,json=crontimetable" json:"crontimetable,omitempty"`
	Runlog           *TaskQueueQueryTasksResponse_Task_RunLog        `protobuf:"group,16,opt,name=RunLog,json=runlog" json:"runlog,omitempty"`
	Description      []byte                                          `protobuf:"bytes,21,opt,name=description" json:"description,omitempty"`
	Payload          *TaskPayload                                    `protobuf:"bytes,22,opt,name=payload" json:"payload,omitempty"`
	RetryParameters  *TaskQueueRetryParameters                       `protobuf:"bytes,23,opt,name=retry_parameters,json=retryParameters" json:"retry_parameters,omitempty"`
	FirstTryUsec     *int64                                          `protobuf:"varint,24,opt,name=first_try_usec,json=firstTryUsec" json:"first_try_usec,omitempty"`
	Tag              []byte                                          `protobuf:"bytes,25,opt,name=tag" json:"tag,omitempty"`
	ExecutionCount   *int32                                          `protobuf:"varint,26,opt,name=execution_count,json=executionCount,def=0" json:"execution_count,omitempty"`
}

// Default values for TaskQueueQueryTasksResponse_Task fields.
const (
	Default_TaskQueueQueryTasksResponse_Task_RetryCount     = int32(0)
	Default_TaskQueueQueryTasksResponse_Task_ExecutionCount = int32(0)
)

func (x *TaskQueueQueryTasksResponse_Task) Reset() {
	*x = TaskQueueQueryTasksResponse_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryTasksResponse_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryTasksResponse_Task) ProtoMessage() {}

func (x *TaskQueueQueryTasksResponse_Task) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryTasksResponse_Task.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryTasksResponse_Task) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{30, 0}
}

func (x *TaskQueueQueryTasksResponse_Task) GetTaskName() []byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetEtaUsec() int64 {
	if x != nil && x.EtaUsec != nil {
		return *x.EtaUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetMethod() TaskQueueQueryTasksResponse_Task_RequestMethod {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return TaskQueueQueryTasksResponse_Task_GET
}

func (x *TaskQueueQueryTasksResponse_Task) GetRetryCount() int32 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return Default_TaskQueueQueryTasksResponse_Task_RetryCount
}

func (x *TaskQueueQueryTasksResponse_Task) GetHeader() []*TaskQueueQueryTasksResponse_Task_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetBodySize() int32 {
	if x != nil && x.BodySize != nil {
		return *x.BodySize
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetCreationTimeUsec() int64 {
	if x != nil && x.CreationTimeUsec != nil {
		return *x.CreationTimeUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task) GetCrontimetable() *TaskQueueQueryTasksResponse_Task_CronTimetable {
	if x != nil {
		return x.Crontimetable
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetRunlog() *TaskQueueQueryTasksResponse_Task_RunLog {
	if x != nil {
		return x.Runlog
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetPayload() *TaskPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetRetryParameters() *TaskQueueRetryParameters {
	if x != nil {
		return x.RetryParameters
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetFirstTryUsec() int64 {
	if x != nil && x.FirstTryUsec != nil {
		return *x.FirstTryUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task) GetExecutionCount() int32 {
	if x != nil && x.ExecutionCount != nil {
		return *x.ExecutionCount
	}
	return Default_TaskQueueQueryTasksResponse_Task_ExecutionCount
}

type TaskQueueQueryTasksResponse_Task_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,8,req,name=key" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,9,req,name=value" json:"value,omitempty"`
}

func (x *TaskQueueQueryTasksResponse_Task_Header) Reset() {
	*x = TaskQueueQueryTasksResponse_Task_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryTasksResponse_Task_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryTasksResponse_Task_Header) ProtoMessage() {}

func (x *TaskQueueQueryTasksResponse_Task_Header) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryTasksResponse_Task_Header.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryTasksResponse_Task_Header) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{30, 0, 0}
}

func (x *TaskQueueQueryTasksResponse_Task_Header) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task_Header) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type TaskQueueQueryTasksResponse_Task_CronTimetable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedule []byte `protobuf:"bytes,14,req,name=schedule" json:"schedule,omitempty"`
	Timezone []byte `protobuf:"bytes,15,req,name=timezone" json:"timezone,omitempty"`
}

func (x *TaskQueueQueryTasksResponse_Task_CronTimetable) Reset() {
	*x = TaskQueueQueryTasksResponse_Task_CronTimetable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryTasksResponse_Task_CronTimetable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryTasksResponse_Task_CronTimetable) ProtoMessage() {}

func (x *TaskQueueQueryTasksResponse_Task_CronTimetable) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryTasksResponse_Task_CronTimetable.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryTasksResponse_Task_CronTimetable) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{30, 0, 1}
}

func (x *TaskQueueQueryTasksResponse_Task_CronTimetable) GetSchedule() []byte {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *TaskQueueQueryTasksResponse_Task_CronTimetable) GetTimezone() []byte {
	if x != nil {
		return x.Timezone
	}
	return nil
}

type TaskQueueQueryTasksResponse_Task_RunLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DispatchedUsec *int64  `protobuf:"varint,17,req,name=dispatched_usec,json=dispatchedUsec" json:"dispatched_usec,omitempty"`
	LagUsec        *int64  `protobuf:"varint,18,req,name=lag_usec,json=lagUsec" json:"lag_usec,omitempty"`
	ElapsedUsec    *int64  `protobuf:"varint,19,req,name=elapsed_usec,json=elapsedUsec" json:"elapsed_usec,omitempty"`
	ResponseCode   *int64  `protobuf:"varint,20,opt,name=response_code,json=responseCode" json:"response_code,omitempty"`
	RetryReason    *string `protobuf:"bytes,27,opt,name=retry_reason,json=retryReason" json:"retry_reason,omitempty"`
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) Reset() {
	*x = TaskQueueQueryTasksResponse_Task_RunLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryTasksResponse_Task_RunLog) ProtoMessage() {}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryTasksResponse_Task_RunLog.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryTasksResponse_Task_RunLog) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{30, 0, 2}
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) GetDispatchedUsec() int64 {
	if x != nil && x.DispatchedUsec != nil {
		return *x.DispatchedUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) GetLagUsec() int64 {
	if x != nil && x.LagUsec != nil {
		return *x.LagUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) GetElapsedUsec() int64 {
	if x != nil && x.ElapsedUsec != nil {
		return *x.ElapsedUsec
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) GetResponseCode() int64 {
	if x != nil && x.ResponseCode != nil {
		return *x.ResponseCode
	}
	return 0
}

func (x *TaskQueueQueryTasksResponse_Task_RunLog) GetRetryReason() string {
	if x != nil && x.RetryReason != nil {
		return *x.RetryReason
	}
	return ""
}

type TaskQueueQueryAndOwnTasksResponse_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName   []byte `protobuf:"bytes,2,req,name=task_name,json=taskName" json:"task_name,omitempty"`
	EtaUsec    *int64 `protobuf:"varint,3,req,name=eta_usec,json=etaUsec" json:"eta_usec,omitempty"`
	RetryCount *int32 `protobuf:"varint,4,opt,name=retry_count,json=retryCount,def=0" json:"retry_count,omitempty"`
	Body       []byte `protobuf:"bytes,5,opt,name=body" json:"body,omitempty"`
	Tag        []byte `protobuf:"bytes,6,opt,name=tag" json:"tag,omitempty"`
}

// Default values for TaskQueueQueryAndOwnTasksResponse_Task fields.
const (
	Default_TaskQueueQueryAndOwnTasksResponse_Task_RetryCount = int32(0)
)

func (x *TaskQueueQueryAndOwnTasksResponse_Task) Reset() {
	*x = TaskQueueQueryAndOwnTasksResponse_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskQueueQueryAndOwnTasksResponse_Task) ProtoMessage() {}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) ProtoReflect() protoreflect.Message {
	mi := &file_internal_taskqueue_taskqueue_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskQueueQueryAndOwnTasksResponse_Task.ProtoReflect.Descriptor instead.
func (*TaskQueueQueryAndOwnTasksResponse_Task) Descriptor() ([]byte, []int) {
	return file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP(), []int{36, 0}
}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) GetTaskName() []byte {
	if x != nil {
		return x.TaskName
	}
	return nil
}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) GetEtaUsec() int64 {
	if x != nil && x.EtaUsec != nil {
		return *x.EtaUsec
	}
	return 0
}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) GetRetryCount() int32 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return Default_TaskQueueQueryAndOwnTasksResponse_Task_RetryCount
}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *TaskQueueQueryAndOwnTasksResponse_Task) GetTag() []byte {
	if x != nil {
		return x.Tag
	}
	return nil
}

var File_internal_taskqueue_taskqueue_service_proto protoreflect.FileDescriptor

var file_internal_taskqueue_taskqueue_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x25, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x95, 0x05, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xfb, 0x04, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10,
	0x04, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x06,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x52, 0x4c, 0x10,
	0x07, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x51, 0x55, 0x45,
	0x55, 0x45, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x52,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x09,
	0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x4f, 0x4d,
	0x42, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x0b, 0x12, 0x0f,
	0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x54, 0x41, 0x10, 0x0c, 0x12,
	0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x0d, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x54, 0x41, 0x53, 0x4b, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x4f, 0x4d, 0x42, 0x53, 0x54,
	0x4f, 0x4e, 0x45, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13,
	0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x10, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44,
	0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x54,
	0x41, 0x53, 0x4b, 0x53, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x13, 0x12, 0x1c, 0x0a, 0x18, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x14, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10,
	0x15, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x4c, 0x5f, 0x4c, 0x4f, 0x4f, 0x4b, 0x55, 0x50, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x16, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16,
	0x49, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x18, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x19,
	0x12, 0x10, 0x0a, 0x0c, 0x51, 0x55, 0x45, 0x55, 0x45, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44,
	0x10, 0x1a, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41,
	0x47, 0x10, 0x1b, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x90, 0x4e, 0x22, 0x1b, 0x0a, 0x0b, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x08, 0x08, 0x0a, 0x10, 0xff, 0xff, 0xff,
	0xff, 0x07, 0x3a, 0x02, 0x08, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x63, 0x12, 0x2b, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x3a, 0x03, 0x30, 0x2e, 0x31, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x42, 0x61, 0x63, 0x6b, 0x6f,
	0x66, 0x66, 0x53, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x6f, 0x66, 0x66, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x04,
	0x33, 0x36, 0x30, 0x30, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66,
	0x53, 0x65, 0x63, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x31, 0x36, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x50, 0x0a, 0x0c,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x63, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3d,
	0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a,
	0x0d, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x1a,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x22, 0x88, 0x07, 0x0a, 0x13, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x74, 0x61, 0x55, 0x73, 0x65, 0x63, 0x12, 0x4d, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x04, 0x50, 0x4f, 0x53, 0x54,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02, 0x08, 0x01, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0d, 0x63, 0x72, 0x6f, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0a, 0x32,
	0x2f, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x0d, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x3a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x67, 0x1a, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x47, 0x0a, 0x0d, 0x43, 0x72, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x03,
	0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x05, 0x22, 0x40, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x7d, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x60, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2d, 0x2e,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x18, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x19, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa6, 0x04, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x18, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x15, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x0e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x51, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x3a, 0x04, 0x50, 0x55, 0x53, 0x48,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x63, 0x6c, 0x52,
	0x03, 0x61, 0x63, 0x6c, 0x12, 0x4a, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x0e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x22, 0x1e, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4f, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x77,
	0x73, 0x22, 0xb4, 0x05, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0a, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x1a, 0xcb, 0x04, 0x0a, 0x05, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x01, 0x52, 0x15, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x69, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x02, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61,
	0x75, 0x73, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x63,
	0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x3a, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x3a,
	0x04, 0x50, 0x55, 0x53, 0x48, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x03, 0x61,
	0x63, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x41, 0x63, 0x6c, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x12, 0x4a, 0x0a, 0x0f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x48, 0x74, 0x74, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x0a, 0x61, 0x70, 0x70,
	0x68, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x1f, 0x54, 0x61, 0x73, 0x6b,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x19, 0x54, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4c, 0x61,
	0x73, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4c, 0x61,
	0x73, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52, 0x17, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x69,
	0x6e, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x64, 0x52, 0x61, 0x74, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x20, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x39,
	0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x9d, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x74, 0x61, 0x5f,
	0x75, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x6c, 0x64, 0x65,
	0x73, 0x74, 0x45, 0x74, 0x61, 0x55, 0x73, 0x65, 0x63, 0x12, 0x4a, 0x0a, 0x0c, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x68, 0x0a, 0x1a, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x50, 0x61, 0x75, 0x73, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x22,
	0x1d, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52,
	0x0a, 0x1a, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x75, 0x72, 0x67, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50,
	0x75, 0x72, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x53, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x1b, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a,
	0x1a, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x65, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x74, 0x61, 0x55, 0x73, 0x65, 0x63, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x31, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x99, 0x0a, 0x0a, 0x1b, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0xb5,
	0x09, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x63,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x65, 0x74, 0x61, 0x55, 0x73, 0x65, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x54, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x35, 0x2e, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f,
	0x64, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62,
	0x6f, 0x64, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02, 0x08, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x63, 0x12, 0x62, 0x0a,
	0x0d, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0a, 0x32, 0x3c, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x0d, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x6c, 0x6f, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0a, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x6c, 0x6f, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x72, 0x79, 0x55, 0x73, 0x65, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x2a, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x30,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x47, 0x0a, 0x0d, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0xb7, 0x01, 0x0a, 0x06, 0x52, 0x75,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x11, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x55, 0x73, 0x65, 0x63, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x61, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x12, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x07, 0x6c, 0x61, 0x67, 0x55, 0x73, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x13, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b,
	0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x55, 0x73, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10,
	0x03, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x22, 0x6e, 0x0a, 0x19, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x1a, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x22, 0x51, 0x0a, 0x22, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x42, 0x0a, 0x23, 0x54, 0x61, 0x73, 0x6b, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x20, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x4f, 0x77, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x27, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0xfc, 0x01, 0x0a, 0x21,
	0x54, 0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6e,
	0x64, 0x4f, 0x77, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0a, 0x32,
	0x34, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x4f, 0x77, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x1a, 0x8c, 0x01, 0x0a, 0x04,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x07, 0x65, 0x74, 0x61, 0x55, 0x73, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0b,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x02,
	0x08, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x9d, 0x01, 0x0a, 0x1f, 0x54,
	0x61, 0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x74,
	0x61, 0x5f, 0x75, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x07, 0x65, 0x74,
	0x61, 0x55, 0x73, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x20, 0x54, 0x61,
	0x73, 0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x74, 0x61, 0x5f, 0x75, 0x73,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x74, 0x61, 0x55, 0x73, 0x65, 0x63, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x71, 0x75, 0x65, 0x75, 0x65,
}

var (
	file_internal_taskqueue_taskqueue_service_proto_rawDescOnce sync.Once
	file_internal_taskqueue_taskqueue_service_proto_rawDescData = file_internal_taskqueue_taskqueue_service_proto_rawDesc
)

func file_internal_taskqueue_taskqueue_service_proto_rawDescGZIP() []byte {
	file_internal_taskqueue_taskqueue_service_proto_rawDescOnce.Do(func() {
		file_internal_taskqueue_taskqueue_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_taskqueue_taskqueue_service_proto_rawDescData)
	})
	return file_internal_taskqueue_taskqueue_service_proto_rawDescData
}

var file_internal_taskqueue_taskqueue_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_internal_taskqueue_taskqueue_service_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_internal_taskqueue_taskqueue_service_proto_goTypes = []interface{}{
	(TaskQueueServiceError_ErrorCode)(0),                   // 0: appengine.v2.TaskQueueServiceError.ErrorCode
	(TaskQueueMode_Mode)(0),                                // 1: appengine.v2.TaskQueueMode.Mode
	(TaskQueueAddRequest_RequestMethod)(0),                 // 2: appengine.v2.TaskQueueAddRequest.RequestMethod
	(TaskQueueQueryTasksResponse_Task_RequestMethod)(0),    // 3: appengine.v2.TaskQueueQueryTasksResponse.Task.RequestMethod
	(*TaskQueueServiceError)(nil),                          // 4: appengine.v2.TaskQueueServiceError
	(*TaskPayload)(nil),                                    // 5: appengine.v2.TaskPayload
	(*TaskQueueRetryParameters)(nil),                       // 6: appengine.v2.TaskQueueRetryParameters
	(*TaskQueueAcl)(nil),                                   // 7: appengine.v2.TaskQueueAcl
	(*TaskQueueHttpHeader)(nil),                            // 8: appengine.v2.TaskQueueHttpHeader
	(*TaskQueueMode)(nil),                                  // 9: appengine.v2.TaskQueueMode
	(*TaskQueueAddRequest)(nil),                            // 10: appengine.v2.TaskQueueAddRequest
	(*TaskQueueAddResponse)(nil),                           // 11: appengine.v2.TaskQueueAddResponse
	(*TaskQueueBulkAddRequest)(nil),                        // 12: appengine.v2.TaskQueueBulkAddRequest
	(*TaskQueueBulkAddResponse)(nil),                       // 13: appengine.v2.TaskQueueBulkAddResponse
	(*TaskQueueDeleteRequest)(nil),                         // 14: appengine.v2.TaskQueueDeleteRequest
	(*TaskQueueDeleteResponse)(nil),                        // 15: appengine.v2.TaskQueueDeleteResponse
	(*TaskQueueForceRunRequest)(nil),                       // 16: appengine.v2.TaskQueueForceRunRequest
	(*TaskQueueForceRunResponse)(nil),                      // 17: appengine.v2.TaskQueueForceRunResponse
	(*TaskQueueUpdateQueueRequest)(nil),                    // 18: appengine.v2.TaskQueueUpdateQueueRequest
	(*TaskQueueUpdateQueueResponse)(nil),                   // 19: appengine.v2.TaskQueueUpdateQueueResponse
	(*TaskQueueFetchQueuesRequest)(nil),                    // 20: appengine.v2.TaskQueueFetchQueuesRequest
	(*TaskQueueFetchQueuesResponse)(nil),                   // 21: appengine.v2.TaskQueueFetchQueuesResponse
	(*TaskQueueFetchQueueStatsRequest)(nil),                // 22: appengine.v2.TaskQueueFetchQueueStatsRequest
	(*TaskQueueScannerQueueInfo)(nil),                      // 23: appengine.v2.TaskQueueScannerQueueInfo
	(*TaskQueueFetchQueueStatsResponse)(nil),               // 24: appengine.v2.TaskQueueFetchQueueStatsResponse
	(*TaskQueuePauseQueueRequest)(nil),                     // 25: appengine.v2.TaskQueuePauseQueueRequest
	(*TaskQueuePauseQueueResponse)(nil),                    // 26: appengine.v2.TaskQueuePauseQueueResponse
	(*TaskQueuePurgeQueueRequest)(nil),                     // 27: appengine.v2.TaskQueuePurgeQueueRequest
	(*TaskQueuePurgeQueueResponse)(nil),                    // 28: appengine.v2.TaskQueuePurgeQueueResponse
	(*TaskQueueDeleteQueueRequest)(nil),                    // 29: appengine.v2.TaskQueueDeleteQueueRequest
	(*TaskQueueDeleteQueueResponse)(nil),                   // 30: appengine.v2.TaskQueueDeleteQueueResponse
	(*TaskQueueDeleteGroupRequest)(nil),                    // 31: appengine.v2.TaskQueueDeleteGroupRequest
	(*TaskQueueDeleteGroupResponse)(nil),                   // 32: appengine.v2.TaskQueueDeleteGroupResponse
	(*TaskQueueQueryTasksRequest)(nil),                     // 33: appengine.v2.TaskQueueQueryTasksRequest
	(*TaskQueueQueryTasksResponse)(nil),                    // 34: appengine.v2.TaskQueueQueryTasksResponse
	(*TaskQueueFetchTaskRequest)(nil),                      // 35: appengine.v2.TaskQueueFetchTaskRequest
	(*TaskQueueFetchTaskResponse)(nil),                     // 36: appengine.v2.TaskQueueFetchTaskResponse
	(*TaskQueueUpdateStorageLimitRequest)(nil),             // 37: appengine.v2.TaskQueueUpdateStorageLimitRequest
	(*TaskQueueUpdateStorageLimitResponse)(nil),            // 38: appengine.v2.TaskQueueUpdateStorageLimitResponse
	(*TaskQueueQueryAndOwnTasksRequest)(nil),               // 39: appengine.v2.TaskQueueQueryAndOwnTasksRequest
	(*TaskQueueQueryAndOwnTasksResponse)(nil),              // 40: appengine.v2.TaskQueueQueryAndOwnTasksResponse
	(*TaskQueueModifyTaskLeaseRequest)(nil),                // 41: appengine.v2.TaskQueueModifyTaskLeaseRequest
	(*TaskQueueModifyTaskLeaseResponse)(nil),               // 42: appengine.v2.TaskQueueModifyTaskLeaseResponse
	(*TaskQueueAddRequest_Header)(nil),                     // 43: appengine.v2.TaskQueueAddRequest.Header
	(*TaskQueueAddRequest_CronTimetable)(nil),              // 44: appengine.v2.TaskQueueAddRequest.CronTimetable
	(*TaskQueueBulkAddResponse_TaskResult)(nil),            // 45: appengine.v2.TaskQueueBulkAddResponse.TaskResult
	(*TaskQueueFetchQueuesResponse_Queue)(nil),             // 46: appengine.v2.TaskQueueFetchQueuesResponse.Queue
	(*TaskQueueFetchQueueStatsResponse_QueueStats)(nil),    // 47: appengine.v2.TaskQueueFetchQueueStatsResponse.QueueStats
	(*TaskQueueQueryTasksResponse_Task)(nil),               // 48: appengine.v2.TaskQueueQueryTasksResponse.Task
	(*TaskQueueQueryTasksResponse_Task_Header)(nil),        // 49: appengine.v2.TaskQueueQueryTasksResponse.Task.Header
	(*TaskQueueQueryTasksResponse_Task_CronTimetable)(nil), // 50: appengine.v2.TaskQueueQueryTasksResponse.Task.CronTimetable
	(*TaskQueueQueryTasksResponse_Task_RunLog)(nil),        // 51: appengine.v2.TaskQueueQueryTasksResponse.Task.RunLog
	(*TaskQueueQueryAndOwnTasksResponse_Task)(nil),         // 52: appengine.v2.TaskQueueQueryAndOwnTasksResponse.Task
	(*datastore.Transaction)(nil),                          // 53: appengine.v2.Transaction
}
var file_internal_taskqueue_taskqueue_service_proto_depIdxs = []int32{
	2,  // 0: appengine.v2.TaskQueueAddRequest.method:type_name -> appengine.v2.TaskQueueAddRequest.RequestMethod
	43, // 1: appengine.v2.TaskQueueAddRequest.header:type_name -> appengine.v2.TaskQueueAddRequest.Header
	53, // 2: appengine.v2.TaskQueueAddRequest.transaction:type_name -> appengine.v2.Transaction
	44, // 3: appengine.v2.TaskQueueAddRequest.crontimetable:type_name -> appengine.v2.TaskQueueAddRequest.CronTimetable
	5,  // 4: appengine.v2.TaskQueueAddRequest.payload:type_name -> appengine.v2.TaskPayload
	6,  // 5: appengine.v2.TaskQueueAddRequest.retry_parameters:type_name -> appengine.v2.TaskQueueRetryParameters
	1,  // 6: appengine.v2.TaskQueueAddRequest.mode:type_name -> appengine.v2.TaskQueueMode.Mode
	10, // 7: appengine.v2.TaskQueueBulkAddRequest.add_request:type_name -> appengine.v2.TaskQueueAddRequest
	45, // 8: appengine.v2.TaskQueueBulkAddResponse.taskresult:type_name -> appengine.v2.TaskQueueBulkAddResponse.TaskResult
	0,  // 9: appengine.v2.TaskQueueDeleteResponse.result:type_name -> appengine.v2.TaskQueueServiceError.ErrorCode
	0,  // 10: appengine.v2.TaskQueueForceRunResponse.result:type_name -> appengine.v2.TaskQueueServiceError.ErrorCode
	6,  // 11: appengine.v2.TaskQueueUpdateQueueRequest.retry_parameters:type_name -> appengine.v2.TaskQueueRetryParameters
	1,  // 12: appengine.v2.TaskQueueUpdateQueueRequest.mode:type_name -> appengine.v2.TaskQueueMode.Mode
	7,  // 13: appengine.v2.TaskQueueUpdateQueueRequest.acl:type_name -> appengine.v2.TaskQueueAcl
	8,  // 14: appengine.v2.TaskQueueUpdateQueueRequest.header_override:type_name -> appengine.v2.TaskQueueHttpHeader
	46, // 15: appengine.v2.TaskQueueFetchQueuesResponse.queue:type_name -> appengine.v2.TaskQueueFetchQueuesResponse.Queue
	47, // 16: appengine.v2.TaskQueueFetchQueueStatsResponse.queuestats:type_name -> appengine.v2.TaskQueueFetchQueueStatsResponse.QueueStats
	48, // 17: appengine.v2.TaskQueueQueryTasksResponse.task:type_name -> appengine.v2.TaskQueueQueryTasksResponse.Task
	34, // 18: appengine.v2.TaskQueueFetchTaskResponse.task:type_name -> appengine.v2.TaskQueueQueryTasksResponse
	52, // 19: appengine.v2.TaskQueueQueryAndOwnTasksResponse.task:type_name -> appengine.v2.TaskQueueQueryAndOwnTasksResponse.Task
	0,  // 20: appengine.v2.TaskQueueBulkAddResponse.TaskResult.result:type_name -> appengine.v2.TaskQueueServiceError.ErrorCode
	6,  // 21: appengine.v2.TaskQueueFetchQueuesResponse.Queue.retry_parameters:type_name -> appengine.v2.TaskQueueRetryParameters
	1,  // 22: appengine.v2.TaskQueueFetchQueuesResponse.Queue.mode:type_name -> appengine.v2.TaskQueueMode.Mode
	7,  // 23: appengine.v2.TaskQueueFetchQueuesResponse.Queue.acl:type_name -> appengine.v2.TaskQueueAcl
	8,  // 24: appengine.v2.TaskQueueFetchQueuesResponse.Queue.header_override:type_name -> appengine.v2.TaskQueueHttpHeader
	23, // 25: appengine.v2.TaskQueueFetchQueueStatsResponse.QueueStats.scanner_info:type_name -> appengine.v2.TaskQueueScannerQueueInfo
	3,  // 26: appengine.v2.TaskQueueQueryTasksResponse.Task.method:type_name -> appengine.v2.TaskQueueQueryTasksResponse.Task.RequestMethod
	49, // 27: appengine.v2.TaskQueueQueryTasksResponse.Task.header:type_name -> appengine.v2.TaskQueueQueryTasksResponse.Task.Header
	50, // 28: appengine.v2.TaskQueueQueryTasksResponse.Task.crontimetable:type_name -> appengine.v2.TaskQueueQueryTasksResponse.Task.CronTimetable
	51, // 29: appengine.v2.TaskQueueQueryTasksResponse.Task.runlog:type_name -> appengine.v2.TaskQueueQueryTasksResponse.Task.RunLog
	5,  // 30: appengine.v2.TaskQueueQueryTasksResponse.Task.payload:type_name -> appengine.v2.TaskPayload
	6,  // 31: appengine.v2.TaskQueueQueryTasksResponse.Task.retry_parameters:type_name -> appengine.v2.TaskQueueRetryParameters
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_internal_taskqueue_taskqueue_service_proto_init() }
func file_internal_taskqueue_taskqueue_service_proto_init() {
	if File_internal_taskqueue_taskqueue_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueServiceError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueRetryParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueAcl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueHttpHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueBulkAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueBulkAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueForceRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueForceRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueUpdateQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueUpdateQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchQueuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchQueuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchQueueStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueScannerQueueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchQueueStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePauseQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePauseQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePurgeQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueuePurgeQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueDeleteQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueDeleteQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueDeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueDeleteGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueUpdateStorageLimitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueUpdateStorageLimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryAndOwnTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryAndOwnTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueModifyTaskLeaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueModifyTaskLeaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueAddRequest_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueAddRequest_CronTimetable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueBulkAddResponse_TaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchQueuesResponse_Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueFetchQueueStatsResponse_QueueStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryTasksResponse_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryTasksResponse_Task_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryTasksResponse_Task_CronTimetable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryTasksResponse_Task_RunLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_taskqueue_taskqueue_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskQueueQueryAndOwnTasksResponse_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_taskqueue_taskqueue_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_taskqueue_taskqueue_service_proto_goTypes,
		DependencyIndexes: file_internal_taskqueue_taskqueue_service_proto_depIdxs,
		EnumInfos:         file_internal_taskqueue_taskqueue_service_proto_enumTypes,
		MessageInfos:      file_internal_taskqueue_taskqueue_service_proto_msgTypes,
	}.Build()
	File_internal_taskqueue_taskqueue_service_proto = out.File
	file_internal_taskqueue_taskqueue_service_proto_rawDesc = nil
	file_internal_taskqueue_taskqueue_service_proto_goTypes = nil
	file_internal_taskqueue_taskqueue_service_proto_depIdxs = nil
}
